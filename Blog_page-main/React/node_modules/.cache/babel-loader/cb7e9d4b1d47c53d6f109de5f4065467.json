{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isPending, setisPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const abortCont = new AbortController();\n    setTimeout(() => {\n      fetch(url, {\n        signal: abortCont.signal\n      }).then(res => {\n        if (!res.ok) {\n          //error coming back from server\n          throw Error('could not fetch the data for that resource');\n        }\n\n        return res.json();\n      }).then(data => {\n        setData(data);\n        setisPending(false);\n        setError(null);\n      }).catch(err => {\n        if (err.name === 'AbortError') {\n          console.log('fetch aborted');\n        } else {\n          // auto catches network / connection error\n          setisPending(false);\n          setError(err.message);\n        }\n      });\n    }, 1000); //abort the fetch\n\n    return () => abortCont.abort();\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n\n_s(useFetch, \"6oBL0UX4zu9V8pTLETBAZd0DO04=\");\n\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","data","setData","isPending","setisPending","error","setError","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort"],"sources":["C:/Users/arige/Desktop/priya/Blog_page-main/React/src/useFetch.js"],"sourcesContent":["import { useState,useEffect} from 'react';\n const useFetch=(url)=>{  \n    const [data,setData]=useState(null);\n    const [isPending,setisPending]=useState(true);\n    const[error,setError]=useState(null);\nuseEffect (() =>{\n    const abortCont = new AbortController();\n    setTimeout(()=>{\n    fetch(url,{signal:abortCont.signal})\n        .then(res=>{\n            if(!res.ok){//error coming back from server\n                throw Error('could not fetch the data for that resource');\n            }\n            return res.json();\n        })\n        .then(data=>{\n            setData(data);\n            setisPending(false);\n            setError(null);\n        })\n        .catch(err => {\n            if(err.name === 'AbortError'){\n                console.log('fetch aborted')\n            }\n            else{\n                 // auto catches network / connection error\n                setisPending(false);\n                setError(err.message);\n            }\n          })\n        }, 1000);\n        //abort the fetch\n        return()=>abortCont.abort();\n    },[url])\n    return{data,isPending,error};\n }\n export default useFetch;"],"mappings":";;AAAA,SAASA,QAAT,EAAkBC,SAAlB,QAAkC,OAAlC;;AACC,MAAMC,QAAQ,GAAEC,GAAD,IAAO;EAAA;;EACnB,MAAM,CAACC,IAAD,EAAMC,OAAN,IAAeL,QAAQ,CAAC,IAAD,CAA7B;EACA,MAAM,CAACM,SAAD,EAAWC,YAAX,IAAyBP,QAAQ,CAAC,IAAD,CAAvC;EACA,MAAK,CAACQ,KAAD,EAAOC,QAAP,IAAiBT,QAAQ,CAAC,IAAD,CAA9B;EACJC,SAAS,CAAE,MAAK;IACZ,MAAMS,SAAS,GAAG,IAAIC,eAAJ,EAAlB;IACAC,UAAU,CAAC,MAAI;MACfC,KAAK,CAACV,GAAD,EAAK;QAACW,MAAM,EAACJ,SAAS,CAACI;MAAlB,CAAL,CAAL,CACKC,IADL,CACUC,GAAG,IAAE;QACP,IAAG,CAACA,GAAG,CAACC,EAAR,EAAW;UAAC;UACR,MAAMC,KAAK,CAAC,4CAAD,CAAX;QACH;;QACD,OAAOF,GAAG,CAACG,IAAJ,EAAP;MACH,CANL,EAOKJ,IAPL,CAOUX,IAAI,IAAE;QACRC,OAAO,CAACD,IAAD,CAAP;QACAG,YAAY,CAAC,KAAD,CAAZ;QACAE,QAAQ,CAAC,IAAD,CAAR;MACH,CAXL,EAYKW,KAZL,CAYWC,GAAG,IAAI;QACV,IAAGA,GAAG,CAACC,IAAJ,KAAa,YAAhB,EAA6B;UACzBC,OAAO,CAACC,GAAR,CAAY,eAAZ;QACH,CAFD,MAGI;UACC;UACDjB,YAAY,CAAC,KAAD,CAAZ;UACAE,QAAQ,CAACY,GAAG,CAACI,OAAL,CAAR;QACH;MACF,CArBP;IAsBK,CAvBK,EAuBH,IAvBG,CAAV,CAFY,CA0BR;;IACA,OAAM,MAAIf,SAAS,CAACgB,KAAV,EAAV;EACH,CA5BI,EA4BH,CAACvB,GAAD,CA5BG,CAAT;EA6BI,OAAM;IAACC,IAAD;IAAME,SAAN;IAAgBE;EAAhB,CAAN;AACF,CAlCD;;GAAMN,Q;;AAmCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}